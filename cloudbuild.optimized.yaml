steps:
  # Build the container image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA', '-f', 'Dockerfile.cloud-run-optimized', '.']
  
  # Push the container image to Container Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA']
  
  # Deploy container image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '$_SERVICE_NAME'
      - '--image'
      - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'
      - '--region'
      - '$_REGION'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--add-cloudsql-instances'
      - '$PROJECT_ID:$_REGION:$_CLOUD_SQL_INSTANCE'
      - '--set-env-vars'
      - 'NODE_ENV=production,USE_CLOUD_SQL=true,DATABASE_URL=postgresql://$_DB_USER:$_DB_PASSWORD@localhost/$_DB_NAME?host=/cloudsql/$PROJECT_ID:$_REGION:$_CLOUD_SQL_INSTANCE'

images:
  - 'gcr.io/$PROJECT_ID/$_SERVICE_NAME:$COMMIT_SHA'

substitutions:
  _SERVICE_NAME: skillmetrics
  _REGION: us-central1
  _CLOUD_SQL_INSTANCE: skillmetrics-db
  _DB_USER: neondb_owner
  _DB_PASSWORD: npg_6SNPYmkEt5pa
  _DB_NAME: neondb