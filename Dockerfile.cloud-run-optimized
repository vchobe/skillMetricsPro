# Stage 1: Build frontend
FROM node:20 AS frontend-builder
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy the rest of the codebase
COPY . .

# Build the frontend
RUN npm run build

# Stage 2: Production environment
FROM node:20-slim
WORKDIR /app

# Set environment variables
ENV NODE_ENV=production
ENV PORT=8080
ENV PGHOST=34.30.6.95
ENV PGPORT=5432
ENV PGUSER=neondb_owner
ENV PGPASSWORD=npg_6SNPYmkEt5pa
ENV PGDATABASE=neondb
ENV DATABASE_URL=postgresql://neondb_owner:npg_6SNPYmkEt5pa@34.30.6.95/neondb

# Copy package.json and package-lock.json
COPY package*.json ./

# Install only production dependencies
RUN npm ci --only=production

# Copy built files from frontend-builder
COPY --from=frontend-builder /app/dist ./dist
COPY server ./server
COPY shared ./shared
COPY public ./public
COPY cloud-sql-connection-helper.mjs ./
COPY apply-report-settings-migration.mjs ./

# Copy required configuration files
COPY drizzle.config.ts ./
COPY postcss.config.js ./
COPY tailwind.config.ts ./

# Open port 8080
EXPOSE 8080

# Set healthcheck
HEALTHCHECK --interval=30s --timeout=5s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:$PORT/health || exit 1

# Run the server
CMD ["node", "dist/server/index.js"]